{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\nconst SPREADSHEET_ID = process.env.React_App_SPREADSHEET_ID;\nconst client_email = process.env.React_App_CLIENT_EMAIL;\nconst PRIVATE_KEY = process.env.React_App_PRIVATE_KEY;\nconst doc = new GoogleSpreadsheet(SPREADSHEET_ID);\n\nconst readData_Testimonies = async () => {\n  _s();\n\n  try {\n    await doc.useServiceAccountAuth({\n      client_email: client_email,\n      private_key: PRIVATE_KEY\n    });\n    await doc.loadInfo();\n    const sheet = doc.sheetsByIndex[2];\n    let rows = await sheet.getRows();\n    return rows;\n  } catch (e) {\n    console.log(e);\n  }\n};\n\n_s(readData_Testimonies, \"XzZzjmf42T4ghIIVsLcPZIIQRXQ=\", false, function () {\n  return [doc.useServiceAccountAuth];\n});\n\nexport default readData_Testimonies;","map":{"version":3,"sources":["C:/Users/91808/Music/onlineitsoftwaresolutions/src/components/testimonies/read-testimonies.js"],"names":["GoogleSpreadsheet","SPREADSHEET_ID","process","env","React_App_SPREADSHEET_ID","client_email","React_App_CLIENT_EMAIL","PRIVATE_KEY","React_App_PRIVATE_KEY","doc","readData_Testimonies","useServiceAccountAuth","private_key","loadInfo","sheet","sheetsByIndex","rows","getRows","e","console","log"],"mappings":";;AAAA,SAASA,iBAAT,QAAkC,oBAAlC;AAEA,MAAMC,cAAc,GAAGC,OAAO,CAACC,GAAR,CAAYC,wBAAnC;AACA,MAAMC,YAAY,GAAGH,OAAO,CAACC,GAAR,CAAYG,sBAAjC;AACA,MAAMC,WAAW,GAAGL,OAAO,CAACC,GAAR,CAAYK,qBAAhC;AAEA,MAAMC,GAAG,GAAG,IAAIT,iBAAJ,CAAsBC,cAAtB,CAAZ;;AACA,MAAMS,oBAAoB,GAAG,YAAY;AAAA;;AACrC,MAAG;AACC,UAAMD,GAAG,CAACE,qBAAJ,CAA0B;AAC5BN,MAAAA,YAAY,EAACA,YADe;AAE5BO,MAAAA,WAAW,EAACL;AAFgB,KAA1B,CAAN;AAIA,UAAME,GAAG,CAACI,QAAJ,EAAN;AACA,UAAMC,KAAK,GAAGL,GAAG,CAACM,aAAJ,CAAkB,CAAlB,CAAd;AACA,QAAIC,IAAI,GAAG,MAAMF,KAAK,CAACG,OAAN,EAAjB;AACA,WAAOD,IAAP;AACH,GATD,CASC,OAAME,CAAN,EAAQ;AACLC,IAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACH;AAEJ,CAdD;;GAAMR,oB;UAEQD,GAAG,CAACE,qB;;;AAalB,eAAeD,oBAAf","sourcesContent":["import { GoogleSpreadsheet } from 'google-spreadsheet';\r\n\r\nconst SPREADSHEET_ID = process.env.React_App_SPREADSHEET_ID;\r\nconst client_email = process.env.React_App_CLIENT_EMAIL;\r\nconst PRIVATE_KEY = process.env.React_App_PRIVATE_KEY;\r\n\r\nconst doc = new GoogleSpreadsheet(SPREADSHEET_ID);\r\nconst readData_Testimonies = async () => {\r\n    try{\r\n        await doc.useServiceAccountAuth({\r\n            client_email:client_email,\r\n            private_key:PRIVATE_KEY,\r\n        });\r\n        await doc.loadInfo();\r\n        const sheet = doc.sheetsByIndex[2];\r\n        let rows = await sheet.getRows();\r\n        return rows;\r\n    }catch(e){\r\n        console.log(e);\r\n    }\r\n\r\n};\r\nexport default readData_Testimonies;"]},"metadata":{},"sourceType":"module"}