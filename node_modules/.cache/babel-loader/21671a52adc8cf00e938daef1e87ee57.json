{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\91808\\\\Music\\\\onlineitsoftwaresolutions\\\\src\\\\components\\\\testimonies\\\\testimonies.component.jsx\";\nimport React from 'react';\nimport { Container, Col, Image, Row } from 'react-bootstrap';\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\nimport '../testimonies/testimonies.styles.css';\nimport TestimonieForm from './add.testimonies';\nimport user from '../testimonies/user.jpg';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass Testimonies extends React.Component {\n  constructor() {\n    super();\n\n    this.btnClicked = () => {\n      this.setState({\n        show: true\n      });\n    };\n\n    this.handleClose = () => {\n      this.setState({\n        show: false\n      });\n    };\n\n    this.state = {\n      data: [],\n      show: false\n    };\n  }\n\n  async readData() {\n    const SPREADSHEET_ID = process.env.React_App_SPREADSHEET_ID;\n    const client_email = process.env.React_App_CLIENT_EMAIL;\n    const PRIVATE_KEY = process.env.React_App_PRIVATE_KEY;\n    const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\n\n    try {\n      await doc.useServiceAccountAuth({\n        client_email: client_email,\n        private_key: PRIVATE_KEY\n      });\n      await doc.loadInfo();\n      const sheet = doc.sheetsByIndex[2];\n      var arr = [];\n      let count = 0;\n      await (await sheet.getRows()).map(row => {\n        arr[count] = Object.values(row);\n        count++;\n      });\n      this.setState({\n        data: arr\n      });\n    } catch (e) {\n      console.log(e);\n    }\n  }\n\n  componentDidMount() {\n    this.readData();\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: \"Testimonies\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 17\n        }, this), this.state.data.map(row => /*#__PURE__*/_jsxDEV(Row, {\n          className: \"rows\",\n          children: [/*#__PURE__*/_jsxDEV(Col, {\n            children: /*#__PURE__*/_jsxDEV(Image, {\n              className: \"img\",\n              src: user\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(Col, {\n            className: \"col\",\n            children: /*#__PURE__*/_jsxDEV(\"p\", {\n              children: row[4]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 23\n          }, this)]\n        }, row[1], true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 21\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 15\n      }, this)\n    }, void 0, false);\n  }\n\n}\n\nexport default Testimonies;","map":{"version":3,"sources":["C:/Users/91808/Music/onlineitsoftwaresolutions/src/components/testimonies/testimonies.component.jsx"],"names":["React","Container","Col","Image","Row","GoogleSpreadsheet","TestimonieForm","user","Link","Testimonies","Component","constructor","btnClicked","setState","show","handleClose","state","data","readData","SPREADSHEET_ID","process","env","React_App_SPREADSHEET_ID","client_email","React_App_CLIENT_EMAIL","PRIVATE_KEY","React_App_PRIVATE_KEY","doc","useServiceAccountAuth","private_key","loadInfo","sheet","sheetsByIndex","arr","count","getRows","map","row","Object","values","e","console","log","componentDidMount","render"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Container, Col, Image, Row } from 'react-bootstrap';\r\nimport { GoogleSpreadsheet } from 'google-spreadsheet';\r\n\r\nimport '../testimonies/testimonies.styles.css';\r\nimport TestimonieForm from './add.testimonies';\r\nimport user from '../testimonies/user.jpg';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass Testimonies extends React.Component{\r\n    constructor(){\r\n        super()\r\n        this.state = {\r\n          data:[],\r\n          show:false\r\n        }\r\n    }\r\n    async readData(){\r\n      const SPREADSHEET_ID = process.env.React_App_SPREADSHEET_ID;\r\n      const client_email = process.env.React_App_CLIENT_EMAIL;\r\n      const PRIVATE_KEY = process.env.React_App_PRIVATE_KEY;\r\n      const doc = new GoogleSpreadsheet(SPREADSHEET_ID);\r\n      try{\r\n        await doc.useServiceAccountAuth({\r\n            client_email:client_email,\r\n            private_key:PRIVATE_KEY,\r\n        });\r\n        await doc.loadInfo();\r\n        const sheet = doc.sheetsByIndex[2];\r\n        var arr = [];\r\n        let count = 0;\r\n        await (await sheet.getRows()).map(row => {\r\n            arr [count] = Object.values(row);\r\n            count++;\r\n        })\r\n        this.setState({data:arr});\r\n      }catch(e){\r\n        console.log(e);\r\n      }\r\n    } \r\n\r\n    btnClicked = () => {\r\n      this.setState({show:true})\r\n    }\r\n\r\n    handleClose = () => {\r\n      this.setState({show:false})\r\n    }\r\n\r\n    componentDidMount(){\r\n      this.readData();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <>\r\n              <Container>\r\n                <span>Testimonies</span>\r\n                {\r\n                  this.state.data.map(row =>\r\n                    <Row key = {row[1]} className = \"rows\">\r\n                      <Col>\r\n                        <Image className = \"img\" src={user}/>\r\n                      </Col>\r\n                      <Col className = \"col\">\r\n                        <p>{row[4]}</p>\r\n                      </Col>\r\n                    </Row>\r\n                  )\r\n                }\r\n              </Container>  \r\n            </>\r\n        )\r\n    }\r\n}\r\nexport default Testimonies;"]},"metadata":{},"sourceType":"module"}